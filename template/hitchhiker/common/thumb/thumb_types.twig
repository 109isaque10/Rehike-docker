{##
 # Implements default and simple thumbnail types.
 #
 # This only implements abstract types for presentation.
 # Behaviour for thumbnails is implemented in
 #     - uix/lockup/thumbnail.twig
 #     - ux_thumb_wrap.twig
 #
 # @author Taniko Yamamoto <kirasicecreamm@gmail.com>
 #}

{## @private #}
{%- macro _abstractImg(src, width) -%}
    {% from "/core/html/img.twig" import img %}
    {{ img({
        src: src,
        width: width,
        onload: ";window.__ytRIL && __ytRIL(this)",
        ytImg: true,
        delayLoad: true
    }) }}
{%- endmacro -%}

{## @private #}
{%- macro _abstractTimeOverlay(lengthText) -%}
    <span class="video-time">{{ lengthText }}</span>
{%- endmacro -%}

{## 
 # Implements the differentiation between
 # types
 #
 # @private 
 #}
{%- macro _abstract(type, data) -%}
    <span class="yt-thumb-{{ type }}">
        {%- if type == "default" -%}
            <span class="yt-thumb-clip">
                {{ _self._abstractImg(data.src, data.width) }}
                <span class="vertical-align"></span>
            </span>
        {%- elseif type == "simple" -%}
            {{ _self._abstractImg(data.src, data.width) }}
        {%- endif -%}

        {# If length is specified, render that #}
        {%- if data.lengthText -%}
            <span class="video-time">{{ data.lengthText }}</span>
        {%- endif -%}
    </span>
{%- endmacro -%}

{##
 # Render a Default thumbnail
 #
 # This function also handles wrapping the
 # thumbnail element into a container that applies
 # standard classes.
 #}
{%- macro renderDefault(data) -%}
    <span class="video-thumb {{ data.class }} yt-thumb yt-thumb-{{ data.width }}">
        {{ _self._abstract("default", data) }}
    </span>
{%- endmacro -%}

{##
 # Render a Simple thumbnail
 #}
{%- macro renderSimple(data) -%}
    <div class="yt-thumb video-thumb">
        {{ _self._abstract("simple", data) }}
    </div>
{%- endmacro -%}